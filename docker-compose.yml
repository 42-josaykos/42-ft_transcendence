version: "3"
services:
  postgres:
    container_name: postgres-transcendence
    image: postgres:14
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - default
    volumes:
      - postgres:/data/postgres-transcendence
    restart: unless-stopped

  # frontend:
  #   container_name: frontend-transcendence
  #   image: frontend-transcendence:1.0.0
  #   build:
  #     context: ./frontend
  #     dockerfile: ./Dockerfile
  #   # command: tail -f /dev/null
  #   command: npm run dev
  #   depends_on:
  #     - backend
  #   ports:
  #     - 3001:3001
  #   networks:
  #     - default
  #   volumes:
  #     - ./frontend:/usr/app
  #     - /usr/app/node_modules
  #   restart: unless-stopped

  # backend:
  #   container_name: backend-transcendence
  #   image: backend-transcendence:1.0.0
  #   build:
  #     context: ./backend
  #     dockerfile: ./Dockerfile
  #   command: npm run start:dev
  #   depends_on:
  #     - postgres
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - default
  #   volumes:
  #     - ./backend:/usr/app
  #     - /usr/app/node_modules
  #   restart: unless-stopped

volumes:
  postgres:

networks:
  default:
    driver: bridge
