version: "3"
services:
  postgres:
    container_name: postgres-transcendence
    image: postgres:14
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
      - default
    volumes:
      - postgres:/data/postgres-transcendence
    restart: unless-stopped

  ############################################################

  backend:
    container_name: backend-transcendence
    image: backend-transcendence:1.0.0
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - API_PORT=${API_PORT}
      - UPLOAD_PORT=${UPLOAD_PORT}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_ACCESS_EXPIRATION_TIME=${JWT_ACCESS_EXPIRATION_TIME}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRATION_TIME=${JWT_REFRESH_EXPIRATION_TIME}
      - FT_CLIENT_ID=${FT_CLIENT_ID}
      - FT_CLIENT_SECRET=${FT_CLIENT_SECRET}
      - FT_CALLBACK_URL=${FT_CALLBACK_URL}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_CALLBACK_URL=${GITHUB_CALLBACK_URL}
    command: npm run dev
    depends_on:
      - postgres
    ports:
      - ${API_PORT}:${API_PORT}
      - ${UPLOAD_PORT}:${UPLOAD_PORT}
      - "3615"
    networks:
      - default
    volumes:
      - ./backend:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped

  ############################################################

  frontend:
    container_name: frontend-transcendence
    image: frontend-transcendence:1.0.0
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
      - BACKEND_HOST=${BACKEND_HOST}
      - API_PORT=${API_PORT}
      - UPLOAD_PORT=${UPLOAD_PORT}
    command: npm run dev
    depends_on:
      - backend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    networks:
      - default
    volumes:
      - ./frontend:/home/node
      - /home/node/node_modules
    restart: unless-stopped

volumes:
  postgres:

networks:
  default:
    driver: bridge
